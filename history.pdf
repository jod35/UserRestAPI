  186  heroku run pip install pillow -a covidxray
  187  heroku logs --tail -a covidxray
  188  cd coding/python/covid-19-xray-image-classifier/
  189  heroku logs --tail -a covidxray
  190  export FLASK_APP=wsgi.py 
  191  export FLASK_DEBUG=1
  192  flask run
  193  clear
  194  flask run
  195  clear
  196  flask run
  197  cd helloworld/
  198  git status 
  199  git checkout v1.0.1
  200  git checkout -b v1.0.1
  201  npm install vuetify --save
  202  code .
  203  npm
  204  js
  205  sudo apt install nodejs
  206  sudo apt install npm
  207  sudo apt install npm --fix-missing
  208  sudo apt update
  209  sudo vim /etc/apt/sources.list
  210  sudo apt update
  211  sudo apt install npm --fix-missing
  212  sudo apt --fix-broken install
  213  node
  214  js
  215  npm install -g @vue/cli
  216  sudo npm install -g @vue/cli
  217  vue
  218  vue ui
  219  ls
  220  rm -rf helloworld/
  221  vue create helloworld
  222  cd helloworld/
  223  npm serve
  224  npm run serve
  225  rm -rf helloworld/
  226  vue create helloworld
  227  npm cache clean --force 
  228  vue create helloworld
  229  rm -rf helloworld/
  230  cd 
  231  rm -rf helloworld/
  232  vue create helloworld
  233  rm -rf helloworld/
  234  vue create helloworld
  235  sudo npm update -g @vue/cli
  236  vue create helloworld
  237  clear
  238  vue create helloworld
  239  sudo vue upgrade
  240  npm cache clean --force
  241  sudo npm cache clean --force
  242  sudo npm cache clean
  243  sudo npm cache clean --force
  244  sudo npm install -g @vue/cli
  245  vue create helloworld
  246  cd helloworld/
  247  npm run serve
  248  /bin/python3.9
  249  /usr/bin/python3 /home/jod35/.vscode/extensions/ms-python.python-2020.11.371526539/pythonFiles/pyvsc-run-isolated.py pip install -U black --user
  250  clear
  251  python3 app.py 
  252  git init
  253  touch .gitignore
  254  git add --all
  255  git commit -m "initial commit"
  256  git remote add origin https://github.com/jod35/Uploadr.git
  257  git push -u origin master
  258  clear
  259  python3 app.py 
  260  git add --all
  261  git commit "retrieve files from storage"
  262  git commit -m "retrieve files from storage"
  263  git push
  264  clear
  265  flask run
  266  git add --all
  267  git commit -m "successful file uploads"
  268  git push
  269  source /home/jod35/anaconda3/bin/activate
  270  conda activate base
  271  /home/jod35/anaconda3/bin/python /home/jod35/.vscode/extensions/ms-python.python-2020.11.371526539/pythonFiles/pyvsc-run-isolated.py pip install -U pylint
  272  git init
  273  git add --all
  274  git commit -m "initial commit"
  275  python3 app
  276  clear
  277  python3 app.py 
  278  git add --all
  279  git commit -m "successful file upload"
  280  git add --all
  281  git commit -m "edit .gitignore"
  282  git add --all
  283  git remote add origin https://github.com/jod35/Dropzone-flask.git
  284  git push -u origin master
  285  source /home/jod35/anaconda3/bin/activate
  286  conda activate base
  287  python3 app.py 
  288  pip3 install flask-dropzone
  289  mkdir dropzone-demo
  290  mv dropzone-demo/ coding/python/
  291  cd coding/python/dropzone-demo/
  292  code .
  293  cd coding/python/
  294  git clone https://github.com/jod35
  295  git clone https://github.com/jod35/anya.git
  296  rm -rf anya/
  297  git clone https://github.com/jod35/anya.git
  298  cd coding/python/
  299  ls
  300  cd ..
  301  ls
  302  cd 
  303  ls
  304  locate anya
  305  git clona anya
  306  git clona httpS://github.com/jod35/anya
  307  git clone httpS://github.com/jod35/anya
  308  git clone https://github.com/jod35/anya
  309  cd anya/
  310  code .
  311  git status
  312  git add --all
  313  git commit -m "fix :styles in paginate div"
  314  git push
  315  git add --all
  316  git commit -m "fix :zoom in on card images"
  317  git push
  318  zsh
  319  python3 manage.py runserver
  320  deconda
  321  python3 manage.py runserver
  322  pip3 install python-decouple whitenoise python-dotenv
  323  python3 manage.py runserver
  324  pip3 install dj_database_uri
  325  pip3 install dj_database_url
  326  python3 manage.py runserver
  327  pip3 install django_crispy_forms
  328  python3 manage.py runserver
  329  cd anya/
  330  git add --all
  331  git commit -m "fix :change page for password reset"
  332  git push
  333  git add --all
  334  git commit -m "fix :change images for homepage"
  335  git push
  336  clear
  337  sudo apt install plank
  338  cd coding/python/covid-19-xray-image-classifier/
  339  ls
  340  export FLASK_APP=wsgi.py 
  341  export FLASK_DEBUG=1
  342  flask run
  343  pip3 -U install flask
  344  pip3 install -U flask
  345  clear
  346  flask run
  347  lsof -i :5000
  348  sudo killall
  349  sudo kill 3242
  350  flask run
  351  clear
  352  flask run
  353  python3 wsgi.py 
  354  clear
  355  python3 wsgi.py 
  356  sudo apt install gnome
  357  clear
  358  python3 wsgi.py 
  359  plank 
  360  time
  361  date
  362  clear
  363  cal
  364  python3 wsgi.py 
  365  clear
  366  python3 wsgi.py 
  367  git add --all
  368  git commit -m "successful file upload"
  369  git push
  370  python3 wsgi.py 
  371  git add --all
  372  git commit -m "adding some styling"
  373  git oush
  374  git push
  375  sudo apt install golang
  376  sudo apt install golang --fix-missing
  377  sudo apt autoremove
  378  clear
  379  bash -c "$(wget -q -O - https://linux.kite.com/dls/linux/current)"
  380  faraday-manage --help
  381  service 
  382  clear
  383  export FLASK_APP=wsgi.py 
  384  export FLASK_DEBUG=1
  385  flask run
  386  git add --all
  387  git commit -m "successful return of data from server to broswer"
  388  git push
  389  git add --all
  390  git commit -m "successful return of data from server to broswer"
  391  git add --all
  392  git commit -m "successful return of data from server to broswer"
  393  clear
  394  export FLASK_APP=wsgi.py 
  395  export FLASK_DEBUG=1
  396  flask run
  397  export FLASK_APP=wsgi.py 
  398  export FLASK_DEBUG=1
  399  flask run
  400  curl -fsSL https://starship.rs/install.sh | bash
  401  sudo vim .bashrc
  402  ls
  403  clear
  404  python
  405  clear
  406  ls
  407  python
  408  deconda
  409  python
  410  python3
  411  poweroff
  412  shuf clear
  413  clear
  414  vim .bashrc
  415  clear
  416  sudo mongod
  417  clear
  418  mkdir -p /data/db
  419  sudo mkdir -p /data/db
  420  sudo mongod
  421  clear
  422  mongo
  423  export FLASK_APP=wsgi.py 
  424  export FLASK_DEBUG=1
  425  flask run
  426  clear
  427  flask run
  428  clear
  429  git add --all
  430  git commit -m "feat :change way is displayed on client"
  431  git push origin frontend-work
  432  clear
  433  cd ~/Downloads/
  434  cd Programs/
  435  ls
  436  sudo dpkg -i mongodb-org-*.deb
  437  mongo
  438  clear
  439  sudo apt install fish
  440  clear
  441  fish
  442  npm install -g @angular/cli
  443  sudo npm install -g @angular/cli
  444  ng
  445  clear
  446  git clone https://github.com/Daily-hobby-projects/Vue-training.git
  447  clear
  448  git add --all
  449  cd Vue-training/
  450  clear
  451  git add --all
  452  git commit -m "app-7"
  453  git push
  454  git add --all
  455  git commit -m "built my first components"
  456  git push
  457  clear
  458  vue create app-10
  459  clear
  460  vue create app-10
  461  cd app-10
  462  clear
  463  npm run serve
  464  python
  465  flask
  466  clear
  467  git add --all
  468  cd ..
  469  ls
  470  cd app-1/
  471  ls
  472  cd Vue-training/
  473  git add --all
  474  git commit -m "created a single file component"
  475  git push
  476  clear
  477  git add --all
  478  git commit -m "integrate new model"
  479  git push origin frontend-work
  480  clear
  481  heroku logs --tail -a covidxray
  482  cd ../python/covid-19-xray-image-classifier/
  483  ls
  484  export FLASK_APP=wsgi.py 
  485  export FLASK_DEBUG=1
  486  flask run
  487  clear
  488  flask run
  489  cd coding/
  490  ls
  491  cd detecting-covid-19-from-chest-xrays/
  492  ls
  493  jupyter-lab
  494  git add --all
  495  git commit -m "fix change to one model"
  496  git push origin frontend-work
  497  ls
  498  git init
  499  rm -rf .git
  500  git init
  501  code .
  502  cd coding/
  503  ls
  504  cd vue\ /
  505  ls
  506  mkdir twotter
  507  cd twotter/
  508  ls
  509  vue create twotter
  510  ls
  511  rm -rf twotter/
  512  vue create twotter
  513  rm -rf twotter/
  514  clear
  515  vue create twotter
  516  cd twotter/
  517  npm run serve
  518  ls
  519  cd ..
  520  cd twotter/
  521  ls
  522  git status 
  523  git add --all
  524  git commit -m "created single file component as well as learned about hooks"
  525  git remote add origin https://github.com/jod35/twotter.git
  526  git push -u origin master
  527  cd ..
  528  ls
  529  rm -rf twotter
  530  ls
  531  lcear
  532  clear
  533  vue create twotter
  534  clear
  535  vue ui
  536  clear
  537  git add --all
  538  ls
  539  cd twotter/
  540  ls
  541  git add --all
  542  git commit -m "forms and input-values"
  543  git push
  544  git add --all
  545  git commit -m "conditioned rendering"
  546  clear
  547  git add --all
  548  git commit -m "list rendering"
  549  clear
  550  git add --all
  551  git commit -m "props"
  552  clear
  553  git add --all
  554  git commit -m "custom events"
  555  git push
  556  clear
  557  vue ui
  558  clear
  559  export FLASK_APP=wsgi.py 
  560  export FLASK_DEBUG=1
  561  flask run
  562  sudo systemctl start postgresql.service 
  563  sudo postgres
  564  psql
  565  su
  566  clear
  567  postgres
  568  jod35
  569  psql
  570  createdb --help
  571  createdb -O jod35 jod35
  572  psql
  573  python3 strings.py 
  574  clear
  575  python3 strings.py 
  576  sudo apt-get install shotwell
  577  sudo apt-get install flameshot
  578  flameshot
  579  flameshot gui
  580  conda config --set auto_activate_base false
  581  clear
  582  ls
  583  ls --help
  584  clear
  585  ls -al
  586  ls -las
  587  man ls
  588  clear
  589  vim credentials.txt 
  590  geany credentials.txt 
  591  sudo systemctl start openvpn.service 
  592  sudo apt-get install -y openvpn network-manager-openvpn network-manager-openvpn-gnome
  593  clear
  594  ssh root@18.207.136.234
  595  restart
  596  geany credentials.txt 
  597  sudo systemctl start openvpn.service 
  598  openvpn 
  599  sudo apt install openvpn
  600  openvpn --config /home/jod35/Downloads/Compressed/vpnbook-pl226-tcp80.ovpn
  601  su
  602  mkdir ipvanish
  603  cd ~/ipvanish
  604  wget https://www.ipvanish.com/software/configs/configs.zip
  605  unzip configs.zip
  606  wget -qO- https://get.speedify.com | sudo -E bash -
  607  clear
  608  ssh root@18.207.136.234
  609  git status 
  610  rm -rf index.html tweets.html 
  611  git status 
  612  git add --all
  613  git commit -m "fix :change to prod db"
  614  git push origin frontend-work
  615  clear
  616  heroku logs --tail -a covidxray
  617  heroku run flask shell
  618  heroku run flask shell -a covidxray
  619  sudo npm install -g typescript
  620  type
  621  mv *.pdf ~/Downloads/
  622  sudo systemctl start apache2.service 
  623  cd /var/www/html/
  624  ls
  625  code index.html
  626  mkdir vsix
  627  mv *.vsix vsix/
  628  mv books/ ~/Downloads/
  629  mv books/ ~/Documents/
  630  code .
  631  cd ../coding/python
  632  mkdir fff
  633  cd fff
  634  git clone https://github.com/jod35/Fast-Food-Fast.git
  635  ls
  636  cd Fast-Food-Fast/
  637  ls
  638  git status 
  639  clear
  640  ls -a
  641  code .
  642  vlc
  643  systemctl start faraday.service 
  644  faraday-server
  645  faraday
  646  faraday-server
  647  kismet
  648  python
  649  python3
  650  vlc
  651  python
  652  python3
  653  go
  654  clear
  655  /bin/python3
  656  clear
  657  flask run
  658  clear
  659  flask run
  660  clear
  661  export FLASK_DEBUG=1
  662  clear
  663  flask run
  664  clear
  665  python
  666  python3
  667  export FLASK_APP=run.py 
  668  export FLASK_DEBUG=1
  669  flask run
  670  clear
  671  flask shell
  672  clear
  673  flask shell
  674  clear
  675  flask shell
  676  clear
  677  flask shell
  678  clear
  679  flask shell
  680  clear
  681  python
  682  python3
  683  clear
  684  source /home/jod35/anaconda3/bin/activate
  685  conda activate base
  686  python
  687  clear
  688  flask shell
  689  vlc
  690  export FLASK_APP=run.py 
  691  export FLASK_DEBUG=1
  692  flask run
  693  export FLASK_APP=run.py 
  694  export FLASK_DEBUG=1
  695  flask run
  696  export FLASK_APP=run.py 
  697  export FLASK_DEBUG=1
  698  flask run
  699  export FLASK_APP=run.py 
  700  export FLASK_DEBUG=1
  701  flask shell
  702  export FLASK_APP=run.py 
  703  export FLASK_DEBUG=1
  704  flask run
  705  export FLASK_APP=run.py 
  706  export FLASK_DEBUG=1
  707  flask run
  708  ng
  709  ng new hellloworld
  710  ls -la
  711  ls -laS
  712  ng new hellloworld
  713  rm -rf helloworld/
  714  ng new hellloworld
  715  rm -rf helloworld/
  716  ng new hellloworld
  717  rm -rf hellloworld/
  718  ng new hellloworld
  719  rm -rf hellloworld/
  720  clear
  721  vue create helloworld
  722  clear
  723  cd helloworld/
  724  vue ui
  725  vue run serve
  726  vue serve
  727  npm serve
  728  vuw ui
  729  vue ui
  730  export FLASK_DEBUG=1
  731  flask run
  732  export FLASK_APP=run.py 
  733  export FLASK_DEBUG=1
  734  flask run
  735  cd Postman/
  736  ls
  737  ./Postman 
  738  clear
  739  bash Postman 
  740  clear
  741  cd 
  742  sudo vim .bashrc
  743  flask shell
  744  clear
  745  flask shell
  746  clear
  747  flask shell
  748  clear
  749  flask shell
  750  clear
  751  flask shell
  752  clear
  753  flask shell
  754  clear
  755  flask shell
  756  clear
  757  flask shell
  758  clear
  759  flask shell
  760  clear
  761  flask shell
  762  clear
  763  flask shell
  764  clear
  765  flask shell
  766  clear
  767  flask shell
  768  clear
  769  flask shell
  770  clear
  771  export FLASK_APP=run.py 
  772  export FLASK_DEBUG=1
  773  flask run
  774  clear
  775  lsof -i :5000
  776  sudo kill 3947
  777  sudo kill 3950
  778  clear
  779  flask run
  780  export FLASK_APP=run.py 
  781  export FLASK_DEBUG=1
  782  flask run
  783  ssh root@18.207.136.234
  784  ls coding
  785  ls coding/python
  786  cd coding/python
  787  git clone https://github.com/jod35/Fast-Food-Fast.git
  788  cd Fast-Food-Fast/
  789  ls
  790  cp ../../fe/modal-dialog/* .
  791  cp  -r ../../fe/modal-dialog/* .
  792  ls
  793  git add --all
  794  git commit -m "initial commit"
  795  touch .gitignore
  796  vim .gitignore
  797  git add --all
  798  git commit -m "initial commit"
  799  git push
  800  cd bin/
  801  ls
  802  ./pycharm.sh 
  803  sudo apt install alacarte
  804  alacarte 
  805  ng new helloworld
  806  sudo apt update
  807  sudo apt-get upgrade
  808  git clone https://github.com/tugumeandree/codeacademy-uganda.git
  809  clear
  810  export FLASK_APP=run.py 
  811  export FLASK_DEBUG=1
  812  flask run
  813  export FLASK_APP=run.py 
  814  export FLASK_DEBUG=1
  815  flask run
  816  sudo apt upgrade --fix-missing
  817  sudo apt autoremove 
  818  clear
  819  uname -ra
  820  sudo apt upgrade
  821  clear
  822  python
  823  python2
  824  python27
  825  python2.7
  826  clear\
  827  clear
  828  python3
  829  clear
  830  pip3 freeze
  831  ls
  832  export FLASK_APP=run.py 
  833  export FLASK_DEBUG=1
  834  flask run
  835  python3
  836  git add --all
  837  git commit -m "first deploy on heroku"
  838  git push
  839  heroku logs --tail -a fast-food-fastlive
  840  clear
  841  git commit -m "second deploy on heroku"
  842  git add --all
  843  git commit -m "second deploy on heroku"
  844  git push
  845  heroku logs --tail -a fast-food-fastlive
  846  git add --all
  847  git commit -m "second deploy on heroku"
  848  git push
  849  heroku logs --tail -a fast-food-fastlive
  850  clear
  851  git add --all
  852  git commit -m "fix :change run in Procfile""
  853  git commit -m "fix :change run in Procfile"
  854  git push
  855  ssh root@18.207.136.234
  856  w
  857  clear
  858  cd ~/Downloads/
  859  cd Compressed/
  860  unzip
  861  unzip bibledesktop-latest-bin.zip 
  862  ls
  863  cd bibledesktop-1.6/
  864  ls
  865  chmod +x BibleDesktop.sh 
  866  ls
  867  ./BibleDesktop.sh 
  868  sudo apt install bibletime
  869  ls
  870  mkdir projects
  871  cd 
  872  cd projects/
  873  mkdir myproject_website 
  874  cd myproject_website/
  875  ld
  876  ls
  877  django-admin startproject mywebsite_project
  878  ls
  879  code .
  880  mkdir images covid
  881  cd covid/
  882  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-1.jpg
  883  https://github.com/ieee8023/covid-chestxray-dataset/tree/master/images/*.jpg
  884  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/*.jpg
  885  ls
  886  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images
  887  ls
  888  ls images 
  889  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-10.jpg
  890  l
  891  ls
  892  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-13.jpg
  893  ls
  894  https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-12.jpg
  895  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-12.jpg
  896  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-13.jpg
  897  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-14.jpg
  898  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-15.jpg
  899  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-17.jpg
  900  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-18.jpg
  901  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-19.jpg
  902  ls
  903  rm images 
  904  rm \*.jpg 
  905  ls
  906  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-2.jpg
  907  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-2.png
  908  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-20.jpg
  909  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-24.jpg
  910  ls
  911  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-266.jpg
  912  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-272.jpg
  913  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-3.jpg
  914  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-4.jpg
  915  ls
  916  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-5.jpg
  917  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-6.jpg
  918  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-7.jpg
  919  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-8.jpg
  920  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000001-9.jpg
  921  lks
  922  ls
  923  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-1.jpg
  924  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-2.jpg
  925  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-3.jpg
  926  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-4.jpg
  927  ls
  928  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-5.jpg
  929  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-6.jpg
  930  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-7.jpg
  931  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-8.jpg
  932  curl -O https://github.com/ieee8023/covid-chestxray-dataset/blob/master/images/000002-9.jpg
  933  ls
  934  thunar .
  935  git clone https://github.com/ieee8023/covid-chestxray-dataset.git
  936  ls
  937  ls
  938  cd covid-chestxray-dataset/
  939  ls
  940  cd 
  941  cd coding/
  942  ls
  943  cd detecting-covid-19-from-chest-xrays/
  944  conda activate
  945  python
  946  jupyter notebok
  947  jupyter notebook
  948  cd coding/
  949  cd detecting-covid-19-from-chest-xrays/
  950  clear
  951  conda activate
  952  jupyter notebook
  953  thunar .
  954  flameshot gui
  955  cd cd coding/detecting-covid-19-from-chest-xrays/
  956  cd coding/detecting-covid-19-from-chest-xrays/
  957  conda activate
  958  jupyter notebook
  959  flameshot gui
  960  flameshot --help
  961  flameshot launcher
  962  flameshot gui
  963  conda activate
  964  cd coding/
  965  jupyter notebook
  966  export FLASK_APP=run
  967  export FLASK_APP=run.py 
  968  export FLASK_DEBUG=1
  969  Flask run
  970  flask run
  971  python3
  972  pip3 install python-decouple
  973  flask run
  974  flask shell
  975  clear
  976  flask shell
  977  clear
  978  flask run
  979  export FLASK_APP=run.py 
  980  export FLASK_DEBUG=1
  981  flask run
  982  pwd
  983  mv ~/Downloads/*.mp3 .
  984  parole 
  985  parole *.mp3
  986  sudo apt install gnome
  987  sudo apt install gnome --fix-misssin
  988  sudo apt install gnome --fix-missing
  989  sudo apt-get remove --auto-remove kali-desktop-xfce
  990  reboot
  991  export FLASK_APP=run.py 
  992  export FLASK_DEBUG=1
  993  flask run
  994  sudo apt purge xfce4
  995  sudo apt-get purge xfconf xfce4-utils xfwm4 xfce4-session xfdesktop4 exo-utils xfce4-panel xfce4-terminal  thunar
  996  clear
  997  mv Icons/ /usr/share/icons/
  998  sudo mv Icons/ /usr/share/icons/
  999  sudo mv Theme/ /usr/share/themes/
 1000  cd ~/Downloads/Compressed/
 1001  ls
 1002  gnome --version
 1003  sudo apt install gnome
 1004  sudo apt autoremove
 1005  xfwm4
 1006  gsettings set org.gnome.desktop.wm.preferences button-layout ":minimize,maximize,close"
 1007  sudo apt autoclean
 1008  sudo apt autoremove
 1009  clear
 1010  sudo mv Yarunity\ Theme\ Pack ~/.themes/
 1011  sudo mv Yarunity\ Theme\ Pack /usr/share/themes/
 1012  gsettings set org.gnome.desktop.wm.preferences button-layout ":minimize,maximize,close"
 1013  tweaks
 1014  ng serve
 1015  git add --all
 1016  git commit -m "fix display updated "
 1017  git push
 1018  cd coding/python/Fast-Food-Fast/
 1019  export FLASK_APP=run.py 
 1020  export FLASK_DEBUG=1
 1021  flask run
 1022  cd coding/python/Fast-Food-Fast/
 1023  export FLASK_APP=1
 1024  export FLASK_DEBUG=1
 1025  export FLASK_APP=run.py 
 1026  flask run
 1027  pip3 install python-dotenv
 1028  clear
 1029  flask shell
 1030  git add --all
 1031  git commit -m "switch to production db"
 1032  git push
 1033  git add --all
 1034  git commit -m "update user account settings"
 1035  git push
 1036  echo $FLASK_APP
 1037  export FLASK_APP=run.py
 1038  export FLASK_DEBUG=1
 1039  flask run
 1040  clear
 1041  flask shell
 1042  cd coding/python/Fast-Food-Fast/
 1043  export FLASK_DEBUG=1
 1044  export FLASK_APP=run.py 
 1045  flask run
 1046  /bin/python3.9 /home/jod35/.vscode/extensions/ms-python.python-2020.12.424452561/pythonFiles/pyvsc-run-isolated.py pip install -U black --user
 1047  clear
 1048  git add --all
 1049  git commit -m "edit README.md"
 1050  git push
 1051  git add --all
 1052  git commit -m "edit README.md"
 1053  git push
 1054  vim main.cpp
 1055  gcc
 1056  gcc main.cpp
 1057  ./main
 1058  ls
 1059  ./a.out 
 1060  mv go/ ..
 1061  mv 
 1062  mv *.pdf ~/Downloads/
 1063  cd ..
 1064  mv *.pdf ~/Documents/
 1065  ls
 1066  pip3 install fast api
 1067  pip3 install fastapi
 1068  pip3 install uvicorn
 1069  uvicorn --help
 1070  mkdir FASTAPI
 1071  cd FASTAPI/
 1072  code .
 1073  uvicorn main:app
 1074  uvicorn main:app --reload
 1075  clear
 1076  vim
 1077  mv ./api.py simple_rest_api/
 1078  clear
 1079  pwd
 1080  mkdir simple_rest_api
 1081  cd simple_rest_api/
 1082  mv ../api.py .
 1083  ls
 1084  export FLASK_APP=api.py 
 1085  export FLASK_DEBUG=1
 1086  flask run
 1087  clear
 1088  flask run
 1089  clear
 1090  uvicorn api:app
 1091  clear
 1092  flask run
 1093  export FLASK_APP=api.py 
 1094  export FLASK_DEBUG=1
 1095  flask shell
 1096  clear
 1097  flask shell
 1098  clear
 1099  ls
 1100  sqlitebrowser myapp.db 
 1101  clear
 1102  locate vimrc
 1103  vim /etc/vim/vimrc
 1104  sudo vim /etc/vim/vimrc
 1105  vim
 1106  touch monokai.vim
 1107  vim monokai.vim 
 1108  locate colors
 1109  ls
 1110  sudo mv monokai.vim /usr/share/vim/vim82/
 1111  ls
 1112  sudo mv /usr/share/vim/vim82/monokai.vim /usr/share/vim/vim82/colors/
 1113  sudo vim /etc/vim/vimrc
 1114  touch dracula.vim
 1115  vim dracula.vim 
 1116  mv dracula.vim /usr/share/vim/vim82/colors/
 1117  sudo mv dracula.vim /usr/share/vim/vim82/colors/
 1118  clear
 1119  touch plug.vim
 1120  vim plug.vim 
 1121  locate autoload
 1122  sudo mv plug.vim /usr/share/vim/vim82/autoload
 1123  curl -fLo ~/.vim/autoload/plug.vim --create-dirs     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
 1124  ls /usr/share/vim/vim82/colors/
 1125  touch gruvbox.vim
 1126  vim gruvbox.vim 
 1127  sudo mv gruvbox.vim /usr/share/vim/vim82/colors/
 1128  clear
 1129  vim onehalfdark.vim
 1130  ls
 1131  sudo mv onehalfdark.vim /usr/share/vim/vim82/colors/
 1132  touch dracula.vim
 1133  vim dracula.vim 
 1134  sudo mv dracula.vim /usr/share/vim/vim82/colors/
 1135  vim atom-dark.vim
 1136  sudo mv atom-dark.vim /usr/share/vim/vim82/colors/
 1137  sudo vim /usr/share/vim/vim82/colors/monokai.vim 
 1138  vim /etc/vim/vimrc
 1139  vim api.py 
 1140  sudo vim /etc/vim/vimrc
 1141  vim
 1142  vim
 1143  cd coding/python/Fast-Food-Fast/
 1144  vim .
 1145  git clone https://github.com/rapphil/vim-python-ide.git && cd vim-python-ide && ./install.sh
 1146  source ~/.bashrc
 1147  vim
 1148  vim simple_rest_api/
 1149  curl --location --request POST 'http://localhost:5000/users' --header 'Content-Type: application/json' --data-raw '{
 1150      "username":"jona",
 1151      "email":"jodestrevin@gmail.com",
 1152      "password":"nathanoj35"
 1153  }'
 1154  curl --location --request POST 'http://localhost:5000/users'--header 'Content-Type:application/json'--data-raw {
 1155  curl --location --request POST 'http://localhost:5000/users'--header 'Content-Type:application/json'--data-raw { "username":"sandrah""email":"sandra@gmail.com""password":"nathanoj35"}
 1156  curl --location --request POST 'http://localhost:5000/users'--header 'Content-Type:application/json'--data-raw { "username":"sandrah""email":"sandra@gmail.com","password":"nathanoj35"}
 1157  cd simple_rest_api/
 1158  vim .
 1159  git clone https://github.com/jod35/UserRestAPI.git
 1160  mv api.py README.md UserRestAPI/
 1161  ls
 1162  mv myapp.db UserRestAPI/
 1163  ls UserRestAPI/
 1164  cd User
 1165  cd UserRestAPI/
 1166  ls
 1167  touch .gitignore
 1168  vim .gitignore
 1169  ls -a
 1170  git add --all
 1171  git commit -m "initial commit"
 1172  git push 
 1173  git add --all
 1174  git commit -m "initial commit"
 1175  git push 
 1176  git add --all
 1177  git commit -m "initial commit"
 1178  ls
 1179  less README.md 
 1180  cat README.md 
 1181  ls
 1182  cat README.md 
 1183  clear
 1184  history
 1185  history > history.pdf
